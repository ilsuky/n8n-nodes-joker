export declare const STANDARD_DESCRIPTIONS: {
    limit: string;
    returnAll: string;
    subtitle: string;
    upsert: string;
    simplifyResponse: string;
};
export declare const STANDARD_NAMES: {
    simplifyResponse: string;
    upsert: string;
};
export declare const WEAK_DESCRIPTIONS: string[];
export declare const SVG_ICON_SOURCES: string[];
/**
 * Technical terms to be replaced with user-friendly versions.
 */
export declare const TECHNICAL_TERMS: string[];
/**
 * British English suffixes to be replaced with their American equivalents.
 */
export declare const BRITISH_ENGLISH_SUFFIXES: string[];
export declare const ERRORS: {
    UNKNOWN_KEY: {
        title: string;
        message: string;
    };
    UNKNOWN_OPTION: {
        title: string;
        message: string;
    };
    FAILED_TO_IMPORT_CUSTOM_CONFIG: {
        title: string;
        message: string;
    };
    OVERSPECIFIED_TARGET: {
        title: string;
        message: string;
    };
    UNSPECIFIED_TARGET: {
        title: string;
        message: string;
    };
    CONFIG_AUTODETECTION_FAILED: {
        title: string;
    };
    FAILED_TO_FIND_TARGET_AT_PATH: {
        title: string;
        message: string;
    };
    MULTIPLE_ONLY_ARGS: {
        title: string;
        message: string;
    };
    INVALID_PATTERNS: {
        title: string;
        message: string;
    };
    NOT_LINTABLE_TARGET: {
        title: string;
        message: string;
    };
};
/**
 * How many items (inclusive) constitute a long listing, which requires alphabetization.
 */
export declare const LONG_LISTING_LIMIT = 5;
/**
 * Filename end patterns that the nodelinter is able to lint.
 */
export declare const LINTABLE_FILE_PATTERNS: string[];
/**
 * Default filename for logs printed with the `--print` option when leaving the filename unspecified.
 */
export declare const DEFAULT_PRINT_FILENAME = "lintOutput";
/**
 * Default filename for autodetectable nodelinter config.
 */
export declare const DEFAULT_AUTODETECT_FILENAME = "nodelinter.config.json";
/**
 * Start text for the comment that creates a lint exception for the next line in the source.
 */
export declare const NEXT_LINE_EXCEPTION_TEXT = "// nodelinter-ignore-next-line";
