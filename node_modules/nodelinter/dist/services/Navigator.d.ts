import ts from "typescript";
/**
 * Bundle of utility methods to navigate the AST.
 */
export declare class Navigator {
    /**
     * Find a matching descendant node.
     */
    static findDescendant(node: ts.Node, testType: {
        [key in "text"]: string;
    }): ts.Node | undefined;
    static getTest: (testType: {
        text: string;
    }) => (node: ts.Node) => boolean;
    static isBooleanKeyword(node: ts.Node): boolean;
    /**
     * Check if the node is a property assignment where
     * - the key-value pair matches, or
     * - the key matches.
     *
     * Note: For the value, `getText()` returns a string from the source, i.e.
     * - a twice-quoted string for a string in the source (e.g. `'value'` → `"'value'"`), and
     * - a normal string for a non-string in the source (e.g. `false` → `'false'`).
     *
     * Therefore, the value to compare to needs to be twice-quoted or stringified.
     */
    static isAssignment(node: ts.Node, { key, value }: {
        key?: string;
        value?: string | boolean;
    }): boolean | undefined;
}
