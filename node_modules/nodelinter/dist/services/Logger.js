"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
var __1 = require("../");
var services_1 = require("../services");
var Collector_1 = require("./Collector");
var ConfigManager_1 = require("./ConfigManager");
// type SubValidatorConstructor<T = {}> = new (...args: any[]) => T;
function Logger(Base) {
    return /** @class */ (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.logs = [];
            _this.log = function (linting) { return function (node) {
                var line = Collector_1.Collector.getLineNumber(node.getChildAt(2));
                line += 1; // TODO: Find out why this offset is needed
                if (ConfigManager_1.ConfigManager.lintIssueIsDisabled(linting.lintIssue, __1.masterConfig) ||
                    ConfigManager_1.ConfigManager.logLevelIsDisabled(linting.logLevel, __1.masterConfig) ||
                    ConfigManager_1.ConfigManager.lintingIsDisabled(linting, __1.masterConfig) ||
                    ConfigManager_1.ConfigManager.lintingIsExcepted(linting, line, Collector_1.Collector.exceptions, __1.masterConfig))
                    return;
                _this.logs.push(__assign({ message: linting.message, lintAreas: linting.lintAreas, lintIssue: linting.lintIssue, line: line, excerpt: __1.masterConfig.truncateExcerpts.enabled
                        ? _this.truncateExcerpt(node.getText())
                        : node.getText(), sourceFilePath: services_1.Traverser.sourceFilePath, logLevel: linting.logLevel }, (linting.details && { details: linting.details })));
            }; };
            return _this;
        }
        class_1.prototype.truncateExcerpt = function (text) {
            if (text.includes("\t"))
                return "<large excerpt omitted>";
            if (text.length <= __1.masterConfig.truncateExcerpts.charLimit)
                return text;
            return text.slice(0, __1.masterConfig.truncateExcerpts.charLimit - 3) + "...";
        };
        return class_1;
    }(Base));
}
exports.Logger = Logger;
