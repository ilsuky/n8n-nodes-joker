"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DisplayNameValidator = void 0;
var constants_1 = require("../../constants");
var lintings_1 = require("../../lintings");
var utils_1 = require("../../utils");
var Navigator_1 = require("../Navigator");
var DisplayNameValidator = /** @class */ (function () {
    function DisplayNameValidator() {
    }
    DisplayNameValidator.prototype.run = function (node) {
        var _this = this;
        if (Navigator_1.Navigator.isAssignment(node, { key: "name", value: "simple" })) {
            node.parent.forEachChild(function (node) {
                if (node.getChildAt(0).getText() === "displayName" &&
                    node.getChildAt(2).getText() !==
                        "'" + constants_1.STANDARD_NAMES.simplifyResponse + "'") {
                    _this.log(lintings_1.LINTINGS.NON_STANDARD_DISPLAY_NAME_FOR_SIMPLIFY_PARAM)(node);
                }
            });
        }
        if (Navigator_1.Navigator.isAssignment(node, { key: "type", value: "collection" })) {
            node.parent.forEachChild(function (child) {
                if (Navigator_1.Navigator.isAssignment(child, { key: "displayOptions" })) {
                    var operationNode = Navigator_1.Navigator.findDescendant(child, {
                        text: "operation",
                    });
                    if (!operationNode)
                        return;
                    var updateNode = Navigator_1.Navigator.findDescendant(operationNode.parent, {
                        text: "'update'",
                    });
                    if (!updateNode)
                        return;
                    node.parent.forEachChild(function (child) {
                        if (Navigator_1.Navigator.isAssignment(child, { key: "displayName" })) {
                            if (child.getChildAt(2).getText() !== "'Update Fields'") {
                                _this.log(lintings_1.LINTINGS.DISPLAYNAME_NOT_UPDATE_FIELDS)(child);
                            }
                        }
                    });
                }
            });
        }
        if (Navigator_1.Navigator.isAssignment(node, { key: "displayName" })) {
            var displayNameValue = node.getChildAt(2).getText().replace(/'/g, ""); // remove single quotes
            if (displayNameValue.match(/id$/) || displayNameValue.match(/Id$/)) {
                this.log(lintings_1.LINTINGS.DISPLAYNAME_WITH_MISCASED_ID)(node);
            }
            if (!utils_1.isTitleCase(displayNameValue)) {
                this.log(lintings_1.LINTINGS.DISPLAYNAME_WITH_NO_TITLECASE)(node);
            }
            if (node.getChildAt(2).getText().startsWith("' ") ||
                node.getChildAt(2).getText().endsWith(" '")) {
                this.log(lintings_1.LINTINGS.DISPLAYNAME_UNTRIMMED)(node);
            }
        }
        return this.logs;
    };
    DisplayNameValidator.lintArea = "displayName";
    return DisplayNameValidator;
}());
exports.DisplayNameValidator = DisplayNameValidator;
