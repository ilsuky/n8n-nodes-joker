"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var defaultConfig_1 = require("../defaultConfig");
var services_1 = require("../services");
var ConfigManager_1 = require("../services/ConfigManager");
var testHelpers_1 = require("./helpers/testHelpers");
var testHelpers_2 = require("./helpers/testHelpers");
describe("Validator should validate miscellaneous rules", function () {
    var lintArea = "miscellaneous";
    if (ConfigManager_1.ConfigManager.lintAreaIsDisabled(lintArea, defaultConfig_1.defaultConfig))
        return;
    var sourceFilePath = testHelpers_1.validatorMockFilePath(lintArea + ".ts");
    var sourceFilePathNodeTs = testHelpers_1.validatorMockFilePath("miscellaneous.node.ts");
    var validator = new services_1.Validator(sourceFilePath);
    var validatorNodeTs = new services_1.Validator(sourceFilePathNodeTs);
    testHelpers_1.transpile(validator, sourceFilePath);
    services_1.Traverser.sourceFilePath = sourceFilePathNodeTs; // required for Validator.runFinal()
    testHelpers_1.transpile(validatorNodeTs, sourceFilePathNodeTs);
    var _a = __read(testHelpers_1.separateContinueOnFail(testHelpers_2.lintingsByGroup[lintArea]), 2), continueOnFail = _a[0], others = _a[1];
    testHelpers_1.runTest(validatorNodeTs)(continueOnFail);
    others.forEach(testHelpers_1.runTest(validator));
});
